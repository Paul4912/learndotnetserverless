
service: learningserverless

frameworkVersion: ">=1.6.0 <2.1.0"

custom: ${file(../../serverless.common.yml):custom}

package:
  artifact: bin/release/netcoreapp3.1/deploy-package.zip

provider:
  name: aws
  stackName: learningserverless-${self:custom.stage}
  stage: dev
  runtime: dotnetcore3.1
  region: ap-southeast-2
  tracing:
    apiGateway: true
    lambda: true
  environment:
    DynamoDbConfiguration__TableName: ${self:custom.stage}-notes
    LAMBDA_NET_SERIALIZER_DEBUG: true
    stage: ${self:custom.stage}
    
  iamRoleStatements:
    - ${file(../../serverless.common.yml):lambdaPolicyXRay}
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DynamoDbConfiguration__TableName}"
  
functions:
  create:
    handler: DotNetServerless.Notes::DotNetServerless.Notes.Functions.CreateNoteFunction::Run
    events:
      - http:
          path: notes
          method: post
          cors: true
          authorizer: aws_iam

  get:
    handler: DotNetServerless.Notes::DotNetServerless.Notes.Functions.GetNoteFunction::Run
    events:
      - http:
          path: notes/{id}
          method: get
          cors: true
          authorizer: aws_iam

  update:
    handler: DotNetServerless.Notes::DotNetServerless.Notes.Functions.UpdateNoteFunction::Run
    events:
      - http:
          path: notes
          method: put
          cors: true
          authorizer: aws_iam

  list:
    handler: DotNetServerless.Notes::DotNetServerless.Notes.Functions.ListNotesFunction::Run
    events:
      - http:
          path: notes
          method: get
          cors: true
          authorizer: aws_iam

  delete:
    handler: DotNetServerless.Notes::DotNetServerless.Notes.Functions.DeleteNoteFunction::Run
    events:
      - http:
          path: notes/delete/{noteId}
          method: post
          cors: true
          authorizer: aws_iam

resources:
  - ${file(Resources/api-gateway-errors.yml)}
  # Cognito Identity Pool Policy
  - ${file(Resources/cognito-policy.yml)}

  - Outputs:
      ApiGatewayRestApiId:
        Value:
          Ref: ApiGatewayRestApi
        Export:
          Name: ${self:custom.stage}-NotesApiGatewayRestApiId
    
      ApiGatewayRestApiRootResourceId:
        Value:
           Fn::GetAtt:
            - ApiGatewayRestApi
            - RootResourceId 
        Export:
          Name: ${self:custom.stage}-NotesApiGatewayRestApiRootResourceId