
service: ${file(env.configs.yml):feature}

frameworkVersion: ">=1.6.0 <2.1.0"

provider:
  name: aws
  stackName: ${file(env.configs.yml):feature}-${file(env.configs.yml):environment}
  runtime: dotnetcore3.1
  region: ${file(env.configs.yml):region}
  environment:
    LAMBDA_NET_SERIALIZER_DEBUG: true

  apiGateway:
    restApiId:
      'Fn::ImportValue': ${file(env.configs.yml):environment}-NotesApiGatewayRestApiId
    restApiRootResourceId:
      'Fn::ImportValue': ${file(env.configs.yml):environment}-NotesApiGatewayRestApiRootResourceId
    
  iamRoleStatements:
    - Effect: Allow
      Action:
        - ssm:GetParameter
      Resource:
        Fn::Join:
          - ''
          -
            - 'arn:aws:ssm:'
            - Ref: AWS::Region
            - ':'
            - Ref: AWS::AccountId
            - ':parameter/stripeSecretKey/*'

    - Effect: Allow
      Action:
        - sns:Publish
      Resource:
        - Ref: NotesPurchasedTopic

package:
  artifact: bin/release/netcoreapp3.1/deploy-package.zip
  
functions:
  billing:
    handler: DotNetServerless.Billing::DotNetServerless.Billing.Functions.BillingFunction::Run
    events:
      - http:
          path: billing
          method: post
          cors: true
          authorizer: aws_iam

resources:
  Resources:
    NotesPurchasedTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: notes-purchased-${file(env.configs.yml):environment}

  Outputs:
    NotesPurchasedTopicArn:
      Value:
        Ref: NotesPurchasedTopic
      Export:
        Name: NotesPurchasedTopicArn-${file(env.configs.yml):environment}