
service: ${file(env.configs.yml):feature}

frameworkVersion: ">=1.6.0 <2.1.0"

provider:
  name: aws
  stackName: ${file(env.configs.yml):feature}-${file(env.configs.yml):environment}
  runtime: dotnetcore3.1
  region: ${file(env.configs.yml):region}
  environment:
    DynamoDbConfiguration__TableName: ${file(env.configs.yml):environment}-${file(env.configs.yml):dynamoTable}
    LAMBDA_NET_SERIALIZER_DEBUG: true
    
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DynamoDbConfiguration__TableName}"

package:
  artifact: bin/release/netcoreapp3.1/deploy-package.zip
  
functions:
  create:
    handler: DotNetServerless.Lambda::DotNetServerless.Lambda.Functions.CreateNoteFunction::Run
    events:
      - http:
          path: notes
          method: post
          cors: true
          authorizer: aws_iam

  get:
    handler: DotNetServerless.Lambda::DotNetServerless.Lambda.Functions.GetNoteFunction::Run
    events:
      - http:
          path: notes/{id}
          method: get
          cors: true
          authorizer: aws_iam

  update:
    handler: DotNetServerless.Lambda::DotNetServerless.Lambda.Functions.UpdateNoteFunction::Run
    events:
      - http:
          path: notes
          method: put
          cors: true
          authorizer: aws_iam

  list:
    handler: DotNetServerless.Lambda::DotNetServerless.Lambda.Functions.ListNotesFunction::Run
    events:
      - http:
          path: notes
          method: get
          cors: true
          authorizer: aws_iam

  delete:
    handler: DotNetServerless.Lambda::DotNetServerless.Lambda.Functions.DeleteNoteFunction::Run
    events:
      - http:
          path: notes/delete/{noteId}
          method: post
          cors: true
          authorizer: aws_iam

resources:
  - ${file(resources/api-gateway-errors.yml)}
  # Cognito Identity Pool Policy
  - ${file(resources/cognito-policy.yml)}